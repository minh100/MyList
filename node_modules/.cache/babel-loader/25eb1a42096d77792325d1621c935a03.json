{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minh100\\\\Desktop\\\\Comp\\\\Projects\\\\my-list\\\\src\\\\Component\\\\ResultCard.js\";\nimport React, { useContext, useState } from 'react';\nimport '../Css/ResultCard.css';\nimport '../Css/Popup.css';\nimport { GlobalContext } from '../Global/GlobalState.js';\nexport const ResultCard = ({\n  anime\n}) => {\n  const {\n    addAnimeToActive,\n    removeAnimeBothList,\n    activeAnimeList,\n    finishedAnimeList\n  } = useContext(GlobalContext);\n  const [popup, togglePopup] = useState(false);\n  let storedActiveAnime = activeAnimeList.find(o => o.id === anime.id);\n  let storedFinishedAnime = finishedAnimeList.find(o => o.id === anime.id); // prevents you from adding already added anime\n\n  const activeListDisabled = storedActiveAnime ? true : storedFinishedAnime ? true : false;\n  const finishedListDisabled = storedFinishedAnime ? true : false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, popup === false ? /*#__PURE__*/React.createElement(\"article\", {\n    key: anime.id,\n    className: \"result-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"result-card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => togglePopup(true),\n    alt: anime.attributes.canonicalTitle,\n    src: anime.attributes.posterImage.large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-card-bot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, anime.attributes.canonicalTitle), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: activeListDisabled,\n    onClick: () => addAnimeToActive(anime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  }, \"+\")))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blocker\",\n    onClick: () => togglePopup(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"popup-cover\",\n    style: {\n      backgroundImage: `url(${anime.attributes.posterImage.large})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"popup-open-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 41\n    }\n  }, anime.attributes.canonicalTitle), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"popup-open-toggle\",\n    onClick: () => togglePopup(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    id: \"popup-score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 45\n    }\n  }, \"Rating: \", anime.attributes.averageRating), /*#__PURE__*/React.createElement(\"h5\", {\n    id: \"popup-episodes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 45\n    }\n  }, \"Episodes: \", anime.attributes.episodeCount), /*#__PURE__*/React.createElement(\"a\", {\n    id: \"link-to-MAL\",\n    href: anime.links.self,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 45\n    }\n  }, \"More\")), /*#__PURE__*/React.createElement(\"h4\", {\n    id: \"popup-synopsis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }\n  }, anime.attributes.synopsis))))));\n};","map":{"version":3,"sources":["C:/Users/minh100/Desktop/Comp/Projects/my-list/src/Component/ResultCard.js"],"names":["React","useContext","useState","GlobalContext","ResultCard","anime","addAnimeToActive","removeAnimeBothList","activeAnimeList","finishedAnimeList","popup","togglePopup","storedActiveAnime","find","o","id","storedFinishedAnime","activeListDisabled","finishedListDisabled","attributes","canonicalTitle","posterImage","large","backgroundImage","averageRating","episodeCount","links","self","synopsis"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport '../Css/ResultCard.css';\r\nimport '../Css/Popup.css';\r\nimport { GlobalContext } from '../Global/GlobalState.js';\r\n\r\nexport const ResultCard = ({ anime }) => {\r\n\r\n    const { addAnimeToActive, removeAnimeBothList, activeAnimeList, finishedAnimeList } = useContext(GlobalContext);\r\n    const [popup, togglePopup] = useState(false);\r\n\r\n    let storedActiveAnime = activeAnimeList.find(o => o.id === anime.id);\r\n    let storedFinishedAnime = finishedAnimeList.find(o => o.id === anime.id);\r\n\r\n\r\n    // prevents you from adding already added anime\r\n    const activeListDisabled = storedActiveAnime ? true :\r\n        storedFinishedAnime ? true : false;\r\n    const finishedListDisabled = storedFinishedAnime ? true : false;\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (popup === false) ? (\r\n                    <article key={anime.id} className=\"result-card\" >\r\n                        <header className=\"result-card-header\">\r\n                            <img onClick={() => togglePopup(true)} alt={anime.attributes.canonicalTitle}\r\n                                src={anime.attributes.posterImage.large}\r\n                            />\r\n                            <div className=\"result-card-bot\">\r\n                                <h5>{anime.attributes.canonicalTitle}</h5>\r\n                                <button disabled={activeListDisabled} onClick={() => addAnimeToActive(anime)}>+</button>\r\n\r\n                            </div>\r\n\r\n                        </header>\r\n                    </article >\r\n                ) : (\r\n                        <div className=\"popup-container\" >\r\n                            <div className=\"blocker\" onClick={() => togglePopup(false)}></div>\r\n                            <div className=\"popup-content\">\r\n                                <div id=\"popup-cover\" style={{ backgroundImage: `url(${anime.attributes.posterImage.large})` }}>\r\n                                </div>\r\n                                <div className=\"popup-description\">\r\n                                    <div className=\"popup-header\">\r\n                                        <h1 id=\"popup-open-title\">{anime.attributes.canonicalTitle}</h1>\r\n                                        <button id=\"popup-open-toggle\" onClick={() => togglePopup(false)}>X</button>\r\n                                    </div>\r\n                                    <div className=\"popup-info\">\r\n                                        <div className=\"popup-stats\">\r\n                                            <h5 id=\"popup-score\">Rating: {anime.attributes.averageRating}</h5>\r\n                                            <h5 id=\"popup-episodes\">Episodes: {anime.attributes.episodeCount}</h5>\r\n                                            <a id=\"link-to-MAL\" href={anime.links.self}>More</a>\r\n                                        </div>\r\n                                        <h4 id=\"popup-synopsis\">{anime.attributes.synopsis}</h4>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}