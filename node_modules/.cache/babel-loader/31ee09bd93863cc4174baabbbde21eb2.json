{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minh100\\\\Desktop\\\\Comp\\\\Projects\\\\my-list\\\\src\\\\Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ResultCard } from './Component/ResultCard.js';\nimport './Home.css';\nimport { Link } from 'react-router-dom';\nexport const Home = () => {\n  const [topAnime, setTopAnime] = useState([]);\n  const [seasonPopular, setSeasonPopular] = useState([]);\n  const [upcoming, setUpcoming] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const baseUrl = \"https://kitsu.io/api/edge\";\n  const dummy = \"\";\n  useEffect(() => {\n    let cancel;\n    cancel && cancel();\n    axios.get(`${baseUrl}/anime?sort=popularityRank&page[limit]=12`, // gets all time popular\n    {\n      cancelToken: new axios.CancelToken(function executor(c) {\n        cancel = c;\n      })\n    }).then(res => {\n      // console.log(res.data.data)\n      setTopAnime(res.data.data);\n    });\n    axios.get(`${baseUrl}/anime?filter[status]=current&sort=popularityRank&page[limit]=12`, // gets trending now\n    {\n      cancelToken: new axios.CancelToken(function executor(c) {\n        cancel = c;\n      })\n    }).then(res => {\n      // console.log(res.data.data)\n      setSeasonPopular(res.data.data);\n    });\n    axios.get(`${baseUrl}/anime?filter[status]=upcoming&sort=popularityRank&page[limit]=12`, // gets upcoming\n    {\n      cancelToken: new axios.CancelToken(function executor(c) {\n        cancel = c;\n      })\n    }).then(res => {\n      // console.log(res.data.data)\n      setUpcoming(res.data.data);\n    });\n  }, [dummy]);\n\n  const onChange = e => {\n    let cancel;\n    e.preventDefault();\n    setSearch(e.target.value);\n    const query = e.target.value;\n    cancel && cancel();\n    axios.get(`${baseUrl}/anime?filter[text]=${query}&page[limit]=20`, {\n      cancelToken: new axios.CancelToken(function executor(c) {\n        cancel = c;\n      })\n    }).then(res => {\n      setResults(res.data.data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: onChange,\n    value: search,\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), results.length > 0 ? /*#__PURE__*/React.createElement(\"section\", {\n    className: \"result-card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, results.map(shows => /*#__PURE__*/React.createElement(ResultCard, {\n    key: shows.id,\n    anime: shows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }))) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upcoming\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Upcoming\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"viewmore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/upcoming\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, \"View More\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"result-card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, upcoming.map(shows => /*#__PURE__*/React.createElement(ResultCard, {\n    key: shows.id,\n    anime: shows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Trending Now\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"viewmore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/trending now\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, \"View More\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"result-card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, seasonPopular.map(shows => /*#__PURE__*/React.createElement(ResultCard, {\n    key: shows.id,\n    anime: shows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"All Time Top\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"viewmore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/all time top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"View More\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"result-card-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, topAnime.map(shows => /*#__PURE__*/React.createElement(ResultCard, {\n    key: shows.id,\n    anime: shows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  })))));\n};","map":{"version":3,"sources":["C:/Users/minh100/Desktop/Comp/Projects/my-list/src/Home.js"],"names":["React","useEffect","useState","axios","ResultCard","Link","Home","topAnime","setTopAnime","seasonPopular","setSeasonPopular","upcoming","setUpcoming","search","setSearch","results","setResults","baseUrl","dummy","cancel","get","cancelToken","CancelToken","executor","c","then","res","data","onChange","e","preventDefault","target","value","query","length","map","shows","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ResultCard } from './Component/ResultCard.js';\r\nimport './Home.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Home = () => {\r\n\r\n    const [topAnime, setTopAnime] = useState([]);\r\n    const [seasonPopular, setSeasonPopular] = useState([]);\r\n    const [upcoming, setUpcoming] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [results, setResults] = useState([]);\r\n    const baseUrl = \"https://kitsu.io/api/edge\";\r\n\r\n    const dummy = \"\";\r\n\r\n    useEffect(() => {\r\n        let cancel;\r\n\r\n        cancel && cancel();\r\n        axios.get(`${baseUrl}/anime?sort=popularityRank&page[limit]=12`,   // gets all time popular\r\n            {\r\n                cancelToken: new axios.CancelToken(function executor(c) {\r\n                    cancel = c\r\n                })\r\n            })\r\n            .then(res => {\r\n                // console.log(res.data.data)\r\n                setTopAnime(res.data.data);\r\n            })\r\n\r\n        axios.get(`${baseUrl}/anime?filter[status]=current&sort=popularityRank&page[limit]=12`,    // gets trending now\r\n            {\r\n                cancelToken: new axios.CancelToken(function executor(c) {\r\n                    cancel = c\r\n                })\r\n            })\r\n            .then(res => {\r\n                // console.log(res.data.data)\r\n                setSeasonPopular(res.data.data);\r\n            })\r\n\r\n        axios.get(`${baseUrl}/anime?filter[status]=upcoming&sort=popularityRank&page[limit]=12`,    // gets upcoming\r\n            {\r\n                cancelToken: new axios.CancelToken(function executor(c) {\r\n                    cancel = c\r\n                })\r\n            })\r\n            .then(res => {\r\n                // console.log(res.data.data)\r\n                setUpcoming(res.data.data);\r\n            })\r\n\r\n    }, [dummy])\r\n\r\n    const onChange = e => {\r\n        let cancel;\r\n\r\n        e.preventDefault();\r\n\r\n        setSearch(e.target.value);\r\n\r\n        const query = e.target.value;\r\n        cancel && cancel();\r\n\r\n        axios.get(`${baseUrl}/anime?filter[text]=${query}&page[limit]=20`,\r\n            {\r\n                cancelToken: new axios.CancelToken(function executor(c) {\r\n                    cancel = c\r\n                })\r\n            })\r\n            .then(res => {\r\n\r\n                setResults(res.data.data);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"search-section\">\r\n                <div className=\"search-bar\">\r\n                    <h3 className=\"title\">Search</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={onChange}\r\n                        value={search}\r\n                        placeholder=\"Search...\"\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    results.length > 0 ? (\r\n                        <section className=\"result-card-list\">\r\n                            {results.map((shows) => (\r\n                                <ResultCard key={shows.id} anime={shows} />\r\n                            ))}\r\n                        </section>\r\n                    ) : \"\"\r\n                }\r\n            </div>\r\n            <div className=\"upcoming\">\r\n                <div className=\"header\">\r\n                    <h3 className=\"title\">Upcoming</h3>\r\n                    <div className=\"viewmore\">\r\n                        <Link to=\"/upcoming\">View More</Link>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    <section className=\"result-card-list\">\r\n                        {upcoming.map((shows) => (\r\n                            <ResultCard key={shows.id} anime={shows} />\r\n                        ))}\r\n                    </section>\r\n\r\n                }\r\n            </div>\r\n            <div className=\"trending\">\r\n                <div className=\"header\">\r\n                    <h3 className=\"title\">Trending Now</h3>\r\n                    <div className=\"viewmore\">\r\n                        <Link to=\"/trending now\">View More</Link>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    <section className=\"result-card-list\">\r\n                        {seasonPopular.map((shows) => (\r\n                            <ResultCard key={shows.id} anime={shows} />\r\n                        ))}\r\n                    </section>\r\n\r\n                }\r\n            </div>\r\n            <div className=\"top\">\r\n                <div className=\"header\">\r\n                    <h3 className=\"title\">All Time Top</h3>\r\n                    <div className=\"viewmore\">\r\n                        <Link to=\"/all time top\">View More</Link>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    <section className=\"result-card-list\">\r\n                        {topAnime.map((shows) => (\r\n                            <ResultCard key={shows.id} anime={shows} />\r\n                        ))}\r\n                    </section>\r\n\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}