{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minh100\\\\Desktop\\\\Comp\\\\Projects\\\\my-list\\\\src\\\\Component\\\\MyList.js\";\nimport React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../Global/GlobalState.js';\nimport { ListCard } from '../Component/ListCard.js';\nimport '../Css/MyList.css';\nexport const MyList = () => {\n  const {\n    activeAnimeList,\n    finishedAnimeList,\n    planningAnimeList\n  } = useContext(GlobalContext);\n  const [listing, setListing] = useState(\"Watching\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mylist-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, listing === \"Watching\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 37\n    }\n  }, listing)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-angle-right fa-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setListing(\"Watched\"),\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 41\n    }\n  }, \"Go to Watched\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setListing(\"Planning\"),\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 41\n    }\n  }, \"Go to Planning\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, \"Anime watching: \", /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 49\n    }\n  }, activeAnimeList.length))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"list-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, activeAnimeList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, activeAnimeList.map(anime => /*#__PURE__*/React.createElement(ListCard, {\n    key: anime.id,\n    anime: anime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 45\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      textAlign: \"right\"\n    },\n    className: \"fas fa-ghost fa-3x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filler\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }\n  }, \"No Anime Watching.  Go Add Some.\")))), listing === \"Watched\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  }, listing)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-angle-right fa-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setListing(\"Watching\"),\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 41\n    }\n  }, \"Go to Watching\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setListing(\"Planning\"),\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 41\n    }\n  }, \"Go to Planning\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"Anime Watched: \", /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 48\n    }\n  }, finishedAnimeList.length))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"list-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, finishedAnimeList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, finishedAnimeList.map(anime => /*#__PURE__*/React.createElement(ListCard, {\n    key: anime.id,\n    anime: anime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 45\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      textAlign: \"right\"\n    },\n    className: \"fas fa-ghost fa-3x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filler\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }, \"No Anime Watched. Go Watch Some.\")))), listing === \"Planning\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }, listing)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-angle-right fa-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setListing(\"Watching\"),\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 41\n    }\n  }, \"Go to Watching\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setListing(\"Watched\"),\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 41\n    }\n  }, \"Go to Watched\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, \"Planned Anime: \", /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 48\n    }\n  }, planningAnimeList.length))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"list-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, planningAnimeList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, planningAnimeList.map(anime => /*#__PURE__*/React.createElement(ListCard, {\n    key: anime.id,\n    anime: anime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 45\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      textAlign: \"right\"\n    },\n    className: \"fas fa-ghost fa-3x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filler\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 41\n    }\n  }, \"No Anime Planned. Go Add Some.\")))));\n};","map":{"version":3,"sources":["C:/Users/minh100/Desktop/Comp/Projects/my-list/src/Component/MyList.js"],"names":["React","useContext","useState","GlobalContext","ListCard","MyList","activeAnimeList","finishedAnimeList","planningAnimeList","listing","setListing","length","map","anime","id","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { GlobalContext } from '../Global/GlobalState.js';\r\nimport { ListCard } from '../Component/ListCard.js';\r\nimport '../Css/MyList.css';\r\n\r\nexport const MyList = () => {\r\n\r\n    const { activeAnimeList, finishedAnimeList, planningAnimeList } = useContext(GlobalContext);\r\n    const [listing, setListing] = useState(\"Watching\");\r\n\r\n    return (\r\n        <div className=\"mylist-section\">\r\n            {\r\n                listing === \"Watching\" && (\r\n                    <>\r\n                        <div className=\"list-header\">\r\n                            <div className=\"list-info\">\r\n                                <div className=\"title\">\r\n                                    <h3>{listing}</h3>\r\n                                </div>\r\n                                <div className=\"dropdown\">\r\n                                    <i className=\"fas fa-angle-right fa-lg\"></i>\r\n                                    <div className=\"dropdown-content\">\r\n                                        <div onClick={() => setListing(\"Watched\")} className=\"items\">Go to Watched</div>\r\n                                        <div onClick={() => setListing(\"Planning\")} className=\"items\">Go to Planning</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"count-box\">\r\n                                Anime watching: <h5 className=\"count\">{activeAnimeList.length}</h5>\r\n                            </div>\r\n                        </div>\r\n                        <section className=\"list-section\">\r\n                            {activeAnimeList.length > 0 ? (\r\n                                <>\r\n                                    {\r\n                                        activeAnimeList.map((anime) => (\r\n                                            <ListCard key={anime.id} anime={anime} />\r\n                                        ))\r\n                                    }\r\n                                </>\r\n\r\n                            ) : (\r\n                                    <>\r\n                                        <i style={{ textAlign: \"right\" }} className=\"fas fa-ghost fa-3x\"></i>\r\n                                        <div className=\"filler\">\r\n                                            No Anime Watching.  Go Add Some.\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </section>\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                listing === \"Watched\" && (\r\n                    <>\r\n                        <div className=\"list-header\">\r\n                            <div className=\"list-info\">\r\n                                <div className=\"title\">\r\n                                    <h3>{listing}</h3>\r\n                                </div>\r\n                                <div className=\"dropdown\">\r\n                                    <i className=\"fas fa-angle-right fa-lg\"></i>\r\n                                    <div className=\"dropdown-content\">\r\n                                        <div onClick={() => setListing(\"Watching\")} className=\"items\">Go to Watching</div>\r\n                                        <div onClick={() => setListing(\"Planning\")} className=\"items\">Go to Planning</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"count-box\">\r\n                                Anime Watched: <h5 className=\"count\">{finishedAnimeList.length}</h5>\r\n                            </div>\r\n                        </div>\r\n                        <section className=\"list-section\">\r\n                            {finishedAnimeList.length > 0 ? (\r\n                                <>\r\n                                    {\r\n                                        finishedAnimeList.map((anime) => (\r\n                                            <ListCard key={anime.id} anime={anime} />\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                            ) : (\r\n                                    <>\r\n                                        <i style={{ textAlign: \"right\" }} className=\"fas fa-ghost fa-3x\"></i>\r\n                                        <div className=\"filler\">\r\n                                            No Anime Watched. Go Watch Some.\r\n                                    </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </section>\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                listing === \"Planning\" && (\r\n                    <>\r\n                        <div className=\"list-header\">\r\n                            <div className=\"list-info\">\r\n                                <div className=\"title\">\r\n                                    <h3>{listing}</h3>\r\n                                </div>\r\n                                <div className=\"dropdown\">\r\n                                    <i className=\"fas fa-angle-right fa-lg\"></i>\r\n                                    <div className=\"dropdown-content\">\r\n                                        <div onClick={() => setListing(\"Watching\")} className=\"items\">Go to Watching</div>\r\n                                        <div onClick={() => setListing(\"Watched\")} className=\"items\">Go to Watched</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"count-box\">\r\n                                Planned Anime: <h5 className=\"count\">{planningAnimeList.length}</h5>\r\n                            </div>\r\n                        </div>\r\n                        <section className=\"list-section\">\r\n                            {planningAnimeList.length > 0 ? (\r\n                                <>\r\n                                    {\r\n                                        planningAnimeList.map((anime) => (\r\n                                            <ListCard key={anime.id} anime={anime} />\r\n                                        ))\r\n                                    }\r\n                                </>\r\n\r\n                            ) : (\r\n                                    <>\r\n                                        <i style={{ textAlign: \"right\" }} className=\"fas fa-ghost fa-3x\"></i>\r\n                                        <div className=\"filler\">\r\n                                            No Anime Planned. Go Add Some.\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </section>\r\n                    </>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}