{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minh100\\\\Desktop\\\\Comp\\\\Projects\\\\my-list\\\\src\\\\Component\\\\MyList.js\";\nimport React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../Global/GlobalState.js';\nimport { ListCard } from '../Component/ListCard.js';\nimport '../Css/MyList.css';\nexport const MyList = () => {\n  const {\n    activeAnimeList,\n    finishedAnimeList\n  } = useContext(GlobalContext);\n  const [listing, setListing] = useState(\"Watching\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, listing === \"Watching\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }\n  }, listing), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListing(\"Watched\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 33\n    }\n  }, \"Go to Watched\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 29\n    }\n  }, activeAnimeList.length > 0 ? `Anime watching: ${activeAnimeList.length}` : \"\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"list-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, activeAnimeList.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 33\n    }\n  }, activeAnimeList.map(anime => /*#__PURE__*/React.createElement(ListCard, {\n    key: anime.id,\n    anime: anime,\n    type: \"anime-watching\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 45\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, \"No Anime Added. Go Add some.\"))), listing === \"Watched\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, listing), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListing(\"Watching\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }, \"Go to Watching\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, finishedAnimeList.length > 0 ? `Anime Watched: ${finishedAnimeList.length}` : \"\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"list-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, finishedAnimeList.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, finishedAnimeList.map(anime => /*#__PURE__*/React.createElement(ListCard, {\n    key: anime.id,\n    anime: anime,\n    type: \"anime-watched\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 45\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, \"No Anime Watched. Go Watch Some.\"))));\n};","map":{"version":3,"sources":["C:/Users/minh100/Desktop/Comp/Projects/my-list/src/Component/MyList.js"],"names":["React","useContext","useState","GlobalContext","ListCard","MyList","activeAnimeList","finishedAnimeList","listing","setListing","length","map","anime","id"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { GlobalContext } from '../Global/GlobalState.js';\r\nimport { ListCard } from '../Component/ListCard.js';\r\nimport '../Css/MyList.css';\r\n\r\nexport const MyList = () => {\r\n\r\n    const { activeAnimeList, finishedAnimeList } = useContext(GlobalContext);\r\n    const [listing, setListing] = useState(\"Watching\");\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                listing === \"Watching\" && (\r\n                    <>\r\n                        <div className=\"list-header\">\r\n                            <div>\r\n                                <h3 className=\"title\">{listing}</h3>\r\n                                <button onClick={ () => setListing(\"Watched\")} >Go to Watched</button>\r\n                            </div>\r\n\r\n                            <h5 className=\"count\">{activeAnimeList.length > 0 ? `Anime watching: ${activeAnimeList.length}` : \"\"}</h5>\r\n                        </div>\r\n                        <section className=\"list-section\">\r\n                            {activeAnimeList.length > 0 ? (\r\n                                <div className=\"list-container\">\r\n                                    {\r\n                                        activeAnimeList.map((anime) => (\r\n                                            <ListCard key={anime.id} anime={anime} type=\"anime-watching\" />\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            ) : <h4>No Anime Added. Go Add some.</h4>}\r\n                        </section>\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                listing === \"Watched\" && (\r\n                    <>\r\n                        <div className=\"list-header\">\r\n                            <div>\r\n                                <h3 className=\"title\">{listing}</h3>\r\n                                <button onClick={ () => setListing(\"Watching\")} >Go to Watching</button>\r\n                            </div>\r\n\r\n                            <h5 className=\"count\">{finishedAnimeList.length > 0 ? `Anime Watched: ${finishedAnimeList.length}` : \"\"}</h5>\r\n                        </div>\r\n                        <section className=\"list-section\">\r\n                            {finishedAnimeList.length > 0 ? (\r\n                                <div className=\"list-container\">\r\n                                    {\r\n                                        finishedAnimeList.map((anime) => (\r\n                                            <ListCard key={anime.id} anime={anime} type=\"anime-watched\" />\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            ) : <h4>No Anime Watched. Go Watch Some.</h4>}\r\n                        </section>\r\n                    </>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}