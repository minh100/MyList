{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minh100\\\\Desktop\\\\Comp\\\\Projects\\\\my-list\\\\src\\\\Component\\\\MyList.js\";\nimport React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../Global/GlobalState.js';\nimport { ListCard } from '../Component/ListCard.js';\nimport '../Css/MyList.css';\nexport const MyList = () => {\n  const {\n    activeAnimeList,\n    finishedAnimeList,\n    planningAnimeList\n  } = useContext(GlobalContext);\n  const [listing, setListing] = useState(\"Watching\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mylist-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, listing === \"Watching\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }\n  }, listing), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListing(\"Watched\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 33\n    }\n  }, \"Go to Watched\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListing(\"Planning\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 33\n    }\n  }, \"Go to Planning\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }, activeAnimeList.length > 0 ? `Anime watching: ${activeAnimeList.length}` : \"\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"list-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, activeAnimeList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, activeAnimeList.map(anime => /*#__PURE__*/React.createElement(ListCard, {\n    key: anime.id,\n    anime: anime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 41\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }, \"No Anime Added. Go Add some.\"))), listing === \"Watched\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, listing), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListing(\"Watching\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, \"Go to Watching\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListing(\"Planning\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, \"Go to Planning\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, finishedAnimeList.length > 0 ? `Anime Watched: ${finishedAnimeList.length}` : \"\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"list-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, finishedAnimeList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, finishedAnimeList.map(anime => /*#__PURE__*/React.createElement(ListCard, {\n    key: anime.id,\n    anime: anime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 45\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, \"No Anime Watched. Go Watch Some.\"))), listing === \"Planning\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, listing), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListing(\"Watching\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, \"Go to Watching\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListing(\"Watched\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, \"Go to Watched\")), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, planningAnimeList.length > 0 ? `Anime watching: ${planningAnimeList.length}` : \"\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"list-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, planningAnimeList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, planningAnimeList.map(anime => /*#__PURE__*/React.createElement(ListCard, {\n    key: anime.id,\n    anime: anime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 41\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, \"No Anime Planned. Go Add some.\"))));\n};","map":{"version":3,"sources":["C:/Users/minh100/Desktop/Comp/Projects/my-list/src/Component/MyList.js"],"names":["React","useContext","useState","GlobalContext","ListCard","MyList","activeAnimeList","finishedAnimeList","planningAnimeList","listing","setListing","length","map","anime","id"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { GlobalContext } from '../Global/GlobalState.js';\r\nimport { ListCard } from '../Component/ListCard.js';\r\nimport '../Css/MyList.css';\r\n\r\nexport const MyList = () => {\r\n\r\n    const { activeAnimeList, finishedAnimeList, planningAnimeList } = useContext(GlobalContext);\r\n    const [listing, setListing] = useState(\"Watching\");\r\n\r\n    return (\r\n        <div className=\"mylist-section\">\r\n\r\n            {\r\n                listing === \"Watching\" && (\r\n                    <>\r\n                        <div className=\"list-header\">\r\n                            <div>\r\n                                <h3 className=\"title\">{listing}</h3>\r\n                                <button onClick={() => setListing(\"Watched\")} >Go to Watched</button>\r\n                                <button onClick={() => setListing(\"Planning\")} >Go to Planning</button>\r\n                            </div>\r\n\r\n                            <h5 className=\"count\">{activeAnimeList.length > 0 ? `Anime watching: ${activeAnimeList.length}` : \"\"}</h5>\r\n                        </div>\r\n                        <section className=\"list-section\">\r\n                            {activeAnimeList.length > 0 ? (\r\n                                <>\r\n                                {\r\n                                    activeAnimeList.map((anime) => (\r\n                                        <ListCard key={anime.id} anime={anime}  />\r\n                                    ))\r\n                                }\r\n                                </>\r\n\r\n                            ) : <h4>No Anime Added. Go Add some.</h4>}\r\n                        </section>\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                listing === \"Watched\" && (\r\n                    <>\r\n                        <div className=\"list-header\">\r\n                            <div>\r\n                                <h3 className=\"title\">{listing}</h3>\r\n                                <button onClick={() => setListing(\"Watching\")} >Go to Watching</button>\r\n                                <button onClick={() => setListing(\"Planning\")} >Go to Planning</button>\r\n                            </div>\r\n\r\n                            <h5 className=\"count\">{finishedAnimeList.length > 0 ? `Anime Watched: ${finishedAnimeList.length}` : \"\"}</h5>\r\n                        </div>\r\n                        <section className=\"list-section\">\r\n                            {finishedAnimeList.length > 0 ? (\r\n                                <>\r\n                                    {\r\n                                        finishedAnimeList.map((anime) => (\r\n                                            <ListCard key={anime.id} anime={anime}  />\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                            ) : <h4>No Anime Watched. Go Watch Some.</h4>}\r\n                        </section>\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                listing === \"Planning\" && (\r\n                    <>\r\n                        <div className=\"list-header\">\r\n                            <div>\r\n                                <h3 className=\"title\">{listing}</h3>\r\n                                <button onClick={() => setListing(\"Watching\")} >Go to Watching</button>\r\n                                <button onClick={() => setListing(\"Watched\")} >Go to Watched</button>\r\n                            </div>\r\n\r\n                            <h5 className=\"count\">{planningAnimeList.length > 0 ? `Anime watching: ${planningAnimeList.length}` : \"\"}</h5>\r\n                        </div>\r\n                        <section className=\"list-section\">\r\n                            {planningAnimeList.length > 0 ? (\r\n                                <>\r\n                                {\r\n                                    planningAnimeList.map((anime) => (\r\n                                        <ListCard key={anime.id} anime={anime} />\r\n                                    ))\r\n                                }\r\n                                </>\r\n\r\n                            ) : <h4>No Anime Planned. Go Add some.</h4>}\r\n                        </section>\r\n                    </>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}